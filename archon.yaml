# archon.yaml

# Project Metadata
project:
  name: "Keycloak Example"
  version: "0.0.1"
  description: "The purpose of this project is to provide an example of how to deploy Keycloak using Archon Cloud."
  maintainers:
    - name: "Ryan Manthy"
      email: "ryan@archon.inc"
  license: "Copyright 2025 Archon Technologies Inc. All rights reserved."

# Paths Configuration
paths:
  source: "src/"                    # General source directory
  tests: "tests/"                   # Test suite directory
  output: "*/target/"               # Build artifacts output directory
  vendor: "*/vendor"                # Vendor or dependency cache directory

# Dependency Management (global or per-service can be defined separately if needed)
dependencies:
  type: "maven"
  file: "pom.xml"
  # Updated dependency installation commands based on Quarkus README
  install_commands:
    # First build the main codebase to populate local maven cache
    - "../mvnw -f ../pom.xml clean install -DskipTestsuite -DskipExamples -DskipTests"
    # Then build the Quarkus distribution
    - "../mvnw clean install -DskipTests"

# Environment Settings
environment:
  variables:
    KC_DB: "postgres"
    KC_DB_URL: "jdbc:postgresql://localhost:5432/keycloak"
    KC_DB_USERNAME: "keycloak"
    KC_DB_PASSWORD: "password"
    KC_HOSTNAME: "localhost"
    KC_HTTP_PORT: "8080"
    KC_HTTPS_PORT: "8443"
    KC_PROXY: "edge"
    KC_LOG_LEVEL: "info"
    # Added home directory for keeping state between startups
    KC_HOME_DIR: ".kc"
    # Configure logging before any Java classes are loaded
    _JAVA_OPTIONS: "-Djava.util.logging.manager=org.jboss.logmanager.LogManager"
    MAVEN_OPTS: "-Djava.util.logging.manager=org.jboss.logmanager.LogManager"
    JAVA_OPTS: "-Djava.util.logging.manager=org.jboss.logmanager.LogManager -Djava.util.concurrent.ForkJoinPool.common.threadFactory=io.quarkus.bootstrap.forkjoin.QuarkusForkJoinWorkerThreadFactory"
  profiles:
    development:
      variables:
        KC_LOG_LEVEL: "debug"
        KC_HEALTH_ENABLED: "true"
        KC_METRICS_ENABLED: "true"
        KC_FEATURES: "preview"
    production:
      variables:
        KC_LOG_LEVEL: "warn"
        KC_CACHE: "ispn"
        KC_CACHE_STACK: "kubernetes"
        KC_HEALTH_ENABLED: "true"
        KC_METRICS_ENABLED: "true"
    testing:
      variables:
        KC_LOG_LEVEL: "debug"
        KC_HEALTH_ENABLED: "true"
        KC_METRICS_ENABLED: "true"
        KC_FEATURES: "preview"
        # Additional test-specific variables
        KEYCLOAK_TEST_TIMEOUT: "300"

# Build Instructions (can be overridden in individual services if required)
build:
  pre_build:
    - "echo 'Starting build process...'"
  build:
    # Updated build commands based on Quarkus README
    - "../mvnw -f ../pom.xml clean install -DskipTestsuite -DskipExamples -DskipTests"
    - "../mvnw -f quarkus/dist/pom.xml clean install"
  run:
    # Command to run Keycloak in development mode
    - "java -jar quarkus/server/target/lib/quarkus-run.jar start-dev"
  dev_mode:
    # Command to run Keycloak in Quarkus development mode with debugging
    - "../mvnw -f quarkus/server/pom.xml compile quarkus:dev -Dquarkus.args='start-dev'"
  test:
    # Commands to run tests with proper configuration without modifying source code
    - "../mvnw -f test-framework/pom.xml clean install -DskipTests"
    - "../mvnw -f test-framework/examples/pom.xml test -Djava.util.logging.manager=org.jboss.logmanager.LogManager -Djava.util.concurrent.ForkJoinPool.common.threadFactory=io.quarkus.bootstrap.forkjoin.QuarkusForkJoinWorkerThreadFactory"
  post_build:
    - "echo 'Build process completed.'"

# Monorepo Docker Environments
# Define multiple Docker environments for different services in the monorepo.
docker_environments:
  keycloak-quarkus:
    context: "."                                # Build context from root
    dockerfile: "quarkus/container/Dockerfile"  # Location of Keycloak Quarkus Dockerfile
    image_tag: "keycloak/keycloak:latest"
    build_args:
      BASE_IMAGE: "alpine:latest"
      KEYCLOAK_VERSION: "${project.version}"
      JAVA_PACKAGE: "java-17-openjdk-headless"
      ENV: "production"
    # Added instructions for building the container image based on README
    build_instructions:
      - "cp quarkus/dist/target/keycloak-${project.version}.tar.gz quarkus/container/"
      - "docker build --build-arg KEYCLOAK_DIST=keycloak-${project.version}.tar.gz -t keycloak/keycloak:latest quarkus/container/"